LOCAIS dos arquuivos: 
    Link GitHub: https://github.com/MateusVictorIderiha/2sem_prj_integrador
    * TODOS OS NOME DE ARQUIVOS E PASTAS NÃO DEVEM CONTER ACENTO OU ESPAÇO
    Arquivos php devem ficar na raiz da pasta "site"
    Arquivos css devem ficar na pasta "site/css"
    Arquivos js devem ficar na pasta "site/js"
    Arquivos de midia já tratados, o nome do arquivo deve ser "nome_width" e sendo da pagina do responsavel deve ficar em "site/midia/nome_sua_categoria".
Qualquer outro arquivo de midia não relacionado deve ir "site/midia/geral"

HTML5:
    Não esquecer da semantica nas paginas e validar elas na w3c
    * Utilizar o elemento picture do html5 (Ele serve para as imagens ele deixa elas responsivas, 
assim deixando se encaixar melhor o layout e também o usuario baixar somente o necessario)
        Exemplo:
        <picture>
            <source media="(max-width: 720px)" srcset="img_150.jpg">
            <source media="(min-width: 720px)" srcset="img_720.jpg">
            <source media="(min-width: 1200px)" srcset="img_1200.jpg">
            <img src="img_720.jpg" alt="Imagem 1" style="width:auto;">
        </picture>
        <!--
        Quando a tela for até 720px ele vai usar a "img_150.jpg", e não vai baixar as outras, 
        se encaixando melhor no layout pois ela pode ser personalizada para esse tamanho especifico de tela, 
        ou não apenas ser menor e mais leve, pois ela não baixa as demais imagens. 
        O mesmo ocorre com os demais tamanhos.
        Ref: https://www.w3schools.com/tags/tag_picture.asp
        -->
        
        LINK PARA REDIMENSIONAR IMAGENS: https://youtu.be/eRdZDuXWUjA


CSS e Design:
    Cor 1 (VERMELHO): EF3341 | A5020E
    Cor 2 (ROXO): 5F4B8B | 281553
    Cor 3 (XENO BLUE): BFC8E0
    FONT: Roboto, Sanchez

    No topo do css vem os estilos gerais referentes a todas as paginas ou um estilo que está em mais de uma
    pagina, os demais estilos serão separados pode pagina, a ordem de cada css deve vir pela ordem da
    estrutura do html.

    Todos os estilos devem estar em style.css, não se deve colocar css no html
    é OBRIGATORIO o uso de css nos css que não são gerais
    as regras css devem ter comentarios da onde eles se referem com um comentario indicando o inicio das regras de css
    e outro indicando aonde as mesmas terminam.
    O comentario principal é referente a pagina e deve estar todo em Maiusculo, 
    caso haja a necessidade de mais um comentario ele deve ir todo em minusculo, 
    o sub comentario é opcional devendo ser colocado apenas se necessario.
    exemplo do comentario de separação
    /**
    * INICIO PAGINA TITULO PRINCIPAL
    */
    [... REGRAS ...]

    /* inicio pagina subtitulo/subcomentario */
    [... REGRAS ...] 
    /* fim pagina subtitulo/subcomentario */

    [... REGRAS ...]
    /**
    * FIM PAGINA TITULO PRINCIPAL
    */

    Quandos os css estão em mais de uma pagina devem ficar no geral com um subcomentario
    
    Regras de css especificas para um tamanho de tela devem ir no final do style.css
    seguindo uma ordem logica dos tamanhos
    
    Dica:
        Para facilitar a sua manutenção das regras css, tente colocalas na ordem do html,
        assim facilitando para voce encontra-los.

PHP:
alguns dos padrões do projeto estão sendo baseados nas PSR, php standard recomendations(recomendações de padrões php) não são obrigatorias a 
serem seguidas, mas no grupo para a padronização de codigo e mais facil entendimento e comunicação entre os membros do grupo depois 
será estabelecidos este padrão.
    -> padrão de codificação dos arquivos é UTF-8
    -> as variaveis devem conter menos de 15 caracteres, tentar dar um nome pelo menos um pouco semantico a variavel
    -> Constantes devem estar com todas as letra em maiusculo e com underline nas palavras diferentes exemplo: VALOR_DE_PI
    -> nas funções e a variaveis, a primeira letra da primeira palavra deve ser minúscula e as demais palavras terão a primeira letra maiúscula.
    -> não há necessidade de fechamento da tag php nos arquivos de php puro, e elas devem conter um espaço em branco na ultima linha
    -> Código deve usar 4 espaços para recuo (Tabulação/indentação)
    -> todas as funções e configurações do devem estar separadas da execução logica. (um ou mais arquivos apenas para declaração de funções e outros apenas executando(chamando), ou seja um arquivo não deve fazer as duas coisas ao mesmo tempo)
    -> nos arquivos de declaração de funções ou configuração não devem ultrapassar mais de 80 caracteres
    -> Nas estruturas de controle(if, for, foreach, while...)
            deve haver um espaço apos a palavra chave da estrutura de controle
            antes da chave de abertura( "{" ) deve a ver um espaço
            a chave de fechamente deve estar na proxima linha depois do corpo
            exemplo:
                    <?php
                    if ($expr1) {
                            // if body
                    } elseif ($expr2) {
                            // elseif body
                    } else {
                            // else body;
                    }

    -> caso haja muitos argumentos pode-se dividir quebrando em linhas onde cada linha fica uma variavel e com uma indentação, o parenteses de fechamento e a chave de abertura ficam na mesma linha seguindo a indentação da abertura:
            <?php
            $longArgs_noVars = function (
                    $longArgument,
                    $longerArgument,
                    $muchLongerArgument
            ) {
                    // body
            };		
    <----------- // ------------->


    -> Todas as funções devem ser comentadas, não há necessidade de comentar funções nativas do php.
    os padrões a serem seguidos do comentario das funções são, esse estilo de documentação é feito pelo phpDocumentor ele gera 
    e ajuda a gerenciar a documentação do php mais tarde veremos como fica, mas ja para adiantar seria algo mais ou menos assim:
     <? php 
     / ** 
      * Um resumo informando ao usuário o que o elemento associado faz. 
      * 
      * @author Mateus Victor <mateus.rego@etec.sp.gov.br>
      * 
      * @param string $myArgument Com uma * descrição * deste argumento, estes também podem 
      * abranger múltiplas linhas. 
      * 
      * @return void 
      * / 
      function  myFunction ( $ myArgument ) { 
      }
      tembém tem a tag para identificar o autor que @author.

SERVIDOR: 
    ------ LEMBRANDO CRIAR UM PROJETO NO NETBEANS APENAS PARA O SITE NA HORA DE SUBIR ------
    FTP: http://oriart-prjintegrador.orgfree.com/ftp/index.php
    SITE: oriart-prjintegrador.orgfree.com
    login FTP: oriart-prjintegrador.orgfree.com
    senha FTP: OriArt2018
    IR em projetos modificar, executar configuração e colocar WEB SITE REMOTE; 
    em coneção clicar em gerenciar, COLOCAR UM NOME para conexão, colocar host e usuario e o nome
    Para subir os arquivos clicar na pasta que deseja subir com o botão direito ou em arquivos de codigo fonte
    
    
   
   Link para Planilha
   https://fatecspgov.sharepoint.com/sites/PRJ_integrador_3sem/Documentos%20Compartilhados/Forms/AllItems.aspx
